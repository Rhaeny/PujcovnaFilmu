//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BL.FilmZanrReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FilmZanrReference.IFilmZanrService")]
    public interface IFilmZanrService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFilmZanrService/Insert", ReplyAction="http://tempuri.org/IFilmZanrService/InsertResponse")]
        int Insert(DTO.FilmZanr filmZanr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFilmZanrService/Insert", ReplyAction="http://tempuri.org/IFilmZanrService/InsertResponse")]
        System.Threading.Tasks.Task<int> InsertAsync(DTO.FilmZanr filmZanr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFilmZanrService/Select", ReplyAction="http://tempuri.org/IFilmZanrService/SelectResponse")]
        System.Collections.ObjectModel.Collection<DTO.FilmZanr> Select();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFilmZanrService/Select", ReplyAction="http://tempuri.org/IFilmZanrService/SelectResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.FilmZanr>> SelectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFilmZanrService/SelectBy", ReplyAction="http://tempuri.org/IFilmZanrService/SelectByResponse")]
        System.Collections.ObjectModel.Collection<DTO.FilmZanr> SelectBy(NullDTO.FilmZanrNull filmZanrNull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFilmZanrService/SelectBy", ReplyAction="http://tempuri.org/IFilmZanrService/SelectByResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.FilmZanr>> SelectByAsync(NullDTO.FilmZanrNull filmZanrNull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFilmZanrService/Delete", ReplyAction="http://tempuri.org/IFilmZanrService/DeleteResponse")]
        int Delete(int idFilm, int idZanr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFilmZanrService/Delete", ReplyAction="http://tempuri.org/IFilmZanrService/DeleteResponse")]
        System.Threading.Tasks.Task<int> DeleteAsync(int idFilm, int idZanr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFilmZanrServiceChannel : BL.FilmZanrReference.IFilmZanrService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FilmZanrServiceClient : System.ServiceModel.ClientBase<BL.FilmZanrReference.IFilmZanrService>, BL.FilmZanrReference.IFilmZanrService {
        
        public FilmZanrServiceClient() {
        }
        
        public FilmZanrServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FilmZanrServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FilmZanrServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FilmZanrServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Insert(DTO.FilmZanr filmZanr) {
            return base.Channel.Insert(filmZanr);
        }
        
        public System.Threading.Tasks.Task<int> InsertAsync(DTO.FilmZanr filmZanr) {
            return base.Channel.InsertAsync(filmZanr);
        }
        
        public System.Collections.ObjectModel.Collection<DTO.FilmZanr> Select() {
            return base.Channel.Select();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.FilmZanr>> SelectAsync() {
            return base.Channel.SelectAsync();
        }
        
        public System.Collections.ObjectModel.Collection<DTO.FilmZanr> SelectBy(NullDTO.FilmZanrNull filmZanrNull) {
            return base.Channel.SelectBy(filmZanrNull);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.FilmZanr>> SelectByAsync(NullDTO.FilmZanrNull filmZanrNull) {
            return base.Channel.SelectByAsync(filmZanrNull);
        }
        
        public int Delete(int idFilm, int idZanr) {
            return base.Channel.Delete(idFilm, idZanr);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAsync(int idFilm, int idZanr) {
            return base.Channel.DeleteAsync(idFilm, idZanr);
        }
    }
}
