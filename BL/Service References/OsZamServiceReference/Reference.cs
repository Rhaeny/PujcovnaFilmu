//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BL.OsZamServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OsZamServiceReference.IOsZamFilmService")]
    public interface IOsZamFilmService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/Insert", ReplyAction="http://tempuri.org/IOsZamFilmService/InsertResponse")]
        int Insert(DTO.OsZamFilm osZamFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/Insert", ReplyAction="http://tempuri.org/IOsZamFilmService/InsertResponse")]
        System.Threading.Tasks.Task<int> InsertAsync(DTO.OsZamFilm osZamFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/Select", ReplyAction="http://tempuri.org/IOsZamFilmService/SelectResponse")]
        System.Collections.ObjectModel.Collection<DTO.OsZamFilm> Select();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/Select", ReplyAction="http://tempuri.org/IOsZamFilmService/SelectResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.OsZamFilm>> SelectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/SelectBy", ReplyAction="http://tempuri.org/IOsZamFilmService/SelectByResponse")]
        System.Collections.ObjectModel.Collection<DTO.OsZamFilm> SelectBy(NullDTO.OsZamFilmNull osZamFilmNull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/SelectBy", ReplyAction="http://tempuri.org/IOsZamFilmService/SelectByResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.OsZamFilm>> SelectByAsync(NullDTO.OsZamFilmNull osZamFilmNull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/Detail", ReplyAction="http://tempuri.org/IOsZamFilmService/DetailResponse")]
        DTO.OsZamFilm Detail(int idFilm, int idZam, int idOsoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/Detail", ReplyAction="http://tempuri.org/IOsZamFilmService/DetailResponse")]
        System.Threading.Tasks.Task<DTO.OsZamFilm> DetailAsync(int idFilm, int idZam, int idOsoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/Delete", ReplyAction="http://tempuri.org/IOsZamFilmService/DeleteResponse")]
        int Delete(int idZam, int idFilm, int idOsoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsZamFilmService/Delete", ReplyAction="http://tempuri.org/IOsZamFilmService/DeleteResponse")]
        System.Threading.Tasks.Task<int> DeleteAsync(int idZam, int idFilm, int idOsoba);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOsZamFilmServiceChannel : BL.OsZamServiceReference.IOsZamFilmService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OsZamFilmServiceClient : System.ServiceModel.ClientBase<BL.OsZamServiceReference.IOsZamFilmService>, BL.OsZamServiceReference.IOsZamFilmService {
        
        public OsZamFilmServiceClient() {
        }
        
        public OsZamFilmServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OsZamFilmServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OsZamFilmServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OsZamFilmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Insert(DTO.OsZamFilm osZamFilm) {
            return base.Channel.Insert(osZamFilm);
        }
        
        public System.Threading.Tasks.Task<int> InsertAsync(DTO.OsZamFilm osZamFilm) {
            return base.Channel.InsertAsync(osZamFilm);
        }
        
        public System.Collections.ObjectModel.Collection<DTO.OsZamFilm> Select() {
            return base.Channel.Select();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.OsZamFilm>> SelectAsync() {
            return base.Channel.SelectAsync();
        }
        
        public System.Collections.ObjectModel.Collection<DTO.OsZamFilm> SelectBy(NullDTO.OsZamFilmNull osZamFilmNull) {
            return base.Channel.SelectBy(osZamFilmNull);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.OsZamFilm>> SelectByAsync(NullDTO.OsZamFilmNull osZamFilmNull) {
            return base.Channel.SelectByAsync(osZamFilmNull);
        }
        
        public DTO.OsZamFilm Detail(int idFilm, int idZam, int idOsoba) {
            return base.Channel.Detail(idFilm, idZam, idOsoba);
        }
        
        public System.Threading.Tasks.Task<DTO.OsZamFilm> DetailAsync(int idFilm, int idZam, int idOsoba) {
            return base.Channel.DetailAsync(idFilm, idZam, idOsoba);
        }
        
        public int Delete(int idZam, int idFilm, int idOsoba) {
            return base.Channel.Delete(idZam, idFilm, idOsoba);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAsync(int idZam, int idFilm, int idOsoba) {
            return base.Channel.DeleteAsync(idZam, idFilm, idOsoba);
        }
    }
}
