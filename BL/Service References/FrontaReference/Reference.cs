//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BL.FrontaReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FrontaReference.IFrontaService")]
    public interface IFrontaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Insert", ReplyAction="http://tempuri.org/IFrontaService/InsertResponse")]
        int Insert(DTO.Fronta fronta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Insert", ReplyAction="http://tempuri.org/IFrontaService/InsertResponse")]
        System.Threading.Tasks.Task<int> InsertAsync(DTO.Fronta fronta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Update", ReplyAction="http://tempuri.org/IFrontaService/UpdateResponse")]
        int Update(DTO.Fronta fronta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Update", ReplyAction="http://tempuri.org/IFrontaService/UpdateResponse")]
        System.Threading.Tasks.Task<int> UpdateAsync(DTO.Fronta fronta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Select", ReplyAction="http://tempuri.org/IFrontaService/SelectResponse")]
        System.Collections.ObjectModel.Collection<DTO.Fronta> Select();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Select", ReplyAction="http://tempuri.org/IFrontaService/SelectResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.Fronta>> SelectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/SelectBy", ReplyAction="http://tempuri.org/IFrontaService/SelectByResponse")]
        System.Collections.ObjectModel.Collection<DTO.Fronta> SelectBy(NullDTO.FrontaNull frontaNull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/SelectBy", ReplyAction="http://tempuri.org/IFrontaService/SelectByResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.Fronta>> SelectByAsync(NullDTO.FrontaNull frontaNull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Detail", ReplyAction="http://tempuri.org/IFrontaService/DetailResponse")]
        DTO.Fronta Detail(int idZak, int idFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Detail", ReplyAction="http://tempuri.org/IFrontaService/DetailResponse")]
        System.Threading.Tasks.Task<DTO.Fronta> DetailAsync(int idZak, int idFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Delete", ReplyAction="http://tempuri.org/IFrontaService/DeleteResponse")]
        int Delete(int idZak, int idFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFrontaService/Delete", ReplyAction="http://tempuri.org/IFrontaService/DeleteResponse")]
        System.Threading.Tasks.Task<int> DeleteAsync(int idZak, int idFilm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFrontaServiceChannel : BL.FrontaReference.IFrontaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FrontaServiceClient : System.ServiceModel.ClientBase<BL.FrontaReference.IFrontaService>, BL.FrontaReference.IFrontaService {
        
        public FrontaServiceClient() {
        }
        
        public FrontaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FrontaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FrontaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FrontaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Insert(DTO.Fronta fronta) {
            return base.Channel.Insert(fronta);
        }
        
        public System.Threading.Tasks.Task<int> InsertAsync(DTO.Fronta fronta) {
            return base.Channel.InsertAsync(fronta);
        }
        
        public int Update(DTO.Fronta fronta) {
            return base.Channel.Update(fronta);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAsync(DTO.Fronta fronta) {
            return base.Channel.UpdateAsync(fronta);
        }
        
        public System.Collections.ObjectModel.Collection<DTO.Fronta> Select() {
            return base.Channel.Select();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.Fronta>> SelectAsync() {
            return base.Channel.SelectAsync();
        }
        
        public System.Collections.ObjectModel.Collection<DTO.Fronta> SelectBy(NullDTO.FrontaNull frontaNull) {
            return base.Channel.SelectBy(frontaNull);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.Fronta>> SelectByAsync(NullDTO.FrontaNull frontaNull) {
            return base.Channel.SelectByAsync(frontaNull);
        }
        
        public DTO.Fronta Detail(int idZak, int idFilm) {
            return base.Channel.Detail(idZak, idFilm);
        }
        
        public System.Threading.Tasks.Task<DTO.Fronta> DetailAsync(int idZak, int idFilm) {
            return base.Channel.DetailAsync(idZak, idFilm);
        }
        
        public int Delete(int idZak, int idFilm) {
            return base.Channel.Delete(idZak, idFilm);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAsync(int idZak, int idFilm) {
            return base.Channel.DeleteAsync(idZak, idFilm);
        }
    }
}
