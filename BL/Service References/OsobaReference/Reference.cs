//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BL.OsobaReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OsobaReference.IOsobaService")]
    public interface IOsobaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Insert", ReplyAction="http://tempuri.org/IOsobaService/InsertResponse")]
        int Insert(DTO.Osoba osoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Insert", ReplyAction="http://tempuri.org/IOsobaService/InsertResponse")]
        System.Threading.Tasks.Task<int> InsertAsync(DTO.Osoba osoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Update", ReplyAction="http://tempuri.org/IOsobaService/UpdateResponse")]
        int Update(DTO.Osoba osoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Update", ReplyAction="http://tempuri.org/IOsobaService/UpdateResponse")]
        System.Threading.Tasks.Task<int> UpdateAsync(DTO.Osoba osoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Select", ReplyAction="http://tempuri.org/IOsobaService/SelectResponse")]
        System.Collections.ObjectModel.Collection<DTO.Osoba> Select();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Select", ReplyAction="http://tempuri.org/IOsobaService/SelectResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.Osoba>> SelectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/SelectBy", ReplyAction="http://tempuri.org/IOsobaService/SelectByResponse")]
        System.Collections.ObjectModel.Collection<DTO.Osoba> SelectBy(NullDTO.OsobaNull osobaNull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/SelectBy", ReplyAction="http://tempuri.org/IOsobaService/SelectByResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.Osoba>> SelectByAsync(NullDTO.OsobaNull osobaNull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Detail", ReplyAction="http://tempuri.org/IOsobaService/DetailResponse")]
        DTO.Osoba Detail(int idOsoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Detail", ReplyAction="http://tempuri.org/IOsobaService/DetailResponse")]
        System.Threading.Tasks.Task<DTO.Osoba> DetailAsync(int idOsoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Delete", ReplyAction="http://tempuri.org/IOsobaService/DeleteResponse")]
        int Delete(int idOsoba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOsobaService/Delete", ReplyAction="http://tempuri.org/IOsobaService/DeleteResponse")]
        System.Threading.Tasks.Task<int> DeleteAsync(int idOsoba);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOsobaServiceChannel : BL.OsobaReference.IOsobaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OsobaServiceClient : System.ServiceModel.ClientBase<BL.OsobaReference.IOsobaService>, BL.OsobaReference.IOsobaService {
        
        public OsobaServiceClient() {
        }
        
        public OsobaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OsobaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OsobaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OsobaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Insert(DTO.Osoba osoba) {
            return base.Channel.Insert(osoba);
        }
        
        public System.Threading.Tasks.Task<int> InsertAsync(DTO.Osoba osoba) {
            return base.Channel.InsertAsync(osoba);
        }
        
        public int Update(DTO.Osoba osoba) {
            return base.Channel.Update(osoba);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAsync(DTO.Osoba osoba) {
            return base.Channel.UpdateAsync(osoba);
        }
        
        public System.Collections.ObjectModel.Collection<DTO.Osoba> Select() {
            return base.Channel.Select();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.Osoba>> SelectAsync() {
            return base.Channel.SelectAsync();
        }
        
        public System.Collections.ObjectModel.Collection<DTO.Osoba> SelectBy(NullDTO.OsobaNull osobaNull) {
            return base.Channel.SelectBy(osobaNull);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<DTO.Osoba>> SelectByAsync(NullDTO.OsobaNull osobaNull) {
            return base.Channel.SelectByAsync(osobaNull);
        }
        
        public DTO.Osoba Detail(int idOsoba) {
            return base.Channel.Detail(idOsoba);
        }
        
        public System.Threading.Tasks.Task<DTO.Osoba> DetailAsync(int idOsoba) {
            return base.Channel.DetailAsync(idOsoba);
        }
        
        public int Delete(int idOsoba) {
            return base.Channel.Delete(idOsoba);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAsync(int idOsoba) {
            return base.Channel.DeleteAsync(idOsoba);
        }
    }
}
